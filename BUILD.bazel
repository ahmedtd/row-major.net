load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_push",
)
load("@jinjaize_deps//:requirements.bzl", "requirement")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix row-major
# gazelle:proto disable_global
gazelle(
    name = "gazelle",
    external = "vendored",
)

py_binary(
    name = "jinjaize",
    srcs = ["jinjaize.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    visibility = ["//visibility:public"],
    deps = [
        requirement("csscompressor"),
        requirement("htmlmin"),
        requirement("jinja2"),
        requirement("markupsafe"),
    ],
)

# pkg_tar(
#     name = "site-tar",
#     srcs = all_deploy,
#     package_dir = "/var/www",
#     strip_prefix = "/",  # Preserve directory structure
# )

# pkg_tar(
#     name = "nginx-conf-tar",
#     srcs = ["//:default.conf"],
#     package_dir = "/etc/nginx/conf.d/",
#     strip_prefix = "/",
# )

# container_image(
#     name = "site-image",
#     base = "@nginx_base//image",
#     cmd = [
#         "nginx",
#         "-g",
#         "daemon off;",
#     ],
#     tars = [
#         "//:site-tar",
#         "//:nginx-conf-tar",
#     ],
# )

# # This rule generates the push digest as //:push-site-container.digest
# container_push(
#     name = "site-push-actual",
#     format = "Docker",
#     image = ":site-image",
#     registry = "gcr.io",
#     repository = "bomsync-214520/row-major-website",
#     tag = "{BUILD_TIMESTAMP}",
# )

# # Generate
# genrule(
#     name = "kustomize-manifests",
#     srcs = glob(["manifests/**/*.yaml"]),
#     outs = ["kustomized-manifest.yaml"],
#     cmd = "kustomize build manifests/ >$@",
#     tools = ["@kustomize//file"],
# )
