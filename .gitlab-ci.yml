# Note: Because of how Gitlab CI constructs the DAG, it's important that a job
# is only defined if all of the jobs it depends on is defined.  In practice,
# this means that the `rules` of a job needs to be a superset of the `rules` of
# all of its dependencies.

variables:
  BAZEL_VERSION: "5.1.0"

stages:
  - upload-images
  - deploy

medtracker/upload-images-and-update-manifest:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_TEST=/m"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - medtracker/**/*
      when: on_success
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "./bazel test -- //medtracker/..."
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //medtracker/cmd/poller:poller_push"
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //medtracker/cmd/webui:webui_push"
    - |
      ./bazel run //infra-tools/bump-manifest -- \
        --merge-file=manifests/medtracker/production/medtracker-poller-production-images.merge.yaml \
        --namespace=medtracker \
        --name=poller \
        --container-name=main \
        --container-image=gcr.io/bomsync-214520/medtracker/poller \
        --container-image-tag=${CI_COMMIT_SHA}
    - |
      ./bazel run //infra-tools/bump-manifest -- \
        --merge-file=manifests/medtracker/production/medtracker-webui-production-images.merge.yaml \
        --namespace=medtracker \
        --name=webui \
        --container-name=main \
        --container-image=gcr.io/bomsync-214520/medtracker/webui \
        --container-image-tag=${CI_COMMIT_SHA}
  
sharded-controller/upload-images-and-update-manifest:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_TEST=/m"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - shardedcontroller/**/*
      when: on_success
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "./bazel test -- //..."
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //shardedcontroller:push"
    - |
      ./bazel run //infra-tools/bump-manifest -- \
        --merge-file=manifests/production/sharded-controller-production-images.merge.yaml \
        --namespace=sharded-controller \
        --name=sharded-controller \
        --container-name=sharded-controller \
        --container-image=gcr.io/bomsync-214520/shardedcontroller \
        --container-image-tag=${CI_COMMIT_SHA}

rumor-mill/upload-images-and-update-manifest:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_TEST=/m"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - rumor-mill/**/*
      when: on_success
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "./bazel test -- //..."
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //rumor-mill/cmd/poller:poller_push"
    - |
      ./bazel run //infra-tools/bump-manifest -- \
        --merge-file=manifests/production/rumor-mill-poller-production-images.merge.yaml \
        --namespace=rumor-mill \
        --name=rumor-mill \
        --container-name=main \
        --container-image=gcr.io/bomsync-214520/rumor-mill/cmd/poller \
        --container-image-tag=${CI_COMMIT_SHA}

row-major-web/upload-images-and-update-manifest:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_TEST=/m"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - webalator/**/*
      when: on_success
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "./bazel test -- //..."
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //webalator:webalator_push"
    - |
      ./bazel run //infra-tools/bump-manifest -- \
        --merge-file=manifests/production/row-major-web-production-images.merge.yaml \
        --namespace=row-major-web \
        --name=row-major-web-content-deployment \
        --container-name=row-major-web-content \
        --container-image=gcr.io/bomsync-214520/webalator \
        --container-image-tag=${CI_COMMIT_SHA}

deploy-medtracker-manifest:
  stage: deploy
  resource_group: medtracker-prod
  environment:
    name: production
    url: https://medtracker.dev/
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_APPLY_MANIFEST=/m"
      when: never
    - changes:
        - manifests/medtracker/**/*
      when: on_success 
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud container clusters get-credentials --project=bomsync-214520 --zone=us-west1 cell-us-west1"
    - "kubectl apply --kustomize=manifests/medtracker/production"

deploy-manifest:
  stage: deploy
  resource_group: prod # Only one instance of deploy-manifest can run at a time.
  environment:
    name: production
    url: https://row-major.net/
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_APPLY_MANIFEST=/m"
      when: never
    - changes:
        - manifests/production/*
      when: on_success
  needs: []
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud container clusters get-credentials --project=bomsync-214520 --zone=us-west1 cell-us-west1"
    - "kubectl apply --kustomize=manifests/production"
