variables:
  BAZEL_VERSION: "5.1.0"

stages:
  - test
  - upload-images
  - update-manifest
  - deploy

Test Everything:
  stage: test
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_TEST=/m"
      when: never
    - when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "./bazel test -- //..."

Upload Sharded Controller Images:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - shardedcontroller/*
      when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //shardedcontroller:push"

Upload Rumor Mill Image:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - rumor-mill/*
      when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //rumor-mill:rumor-mill_push"

Upload Webalator Image:
  stage: upload-images
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPLOAD_IMAGES=/m"
      when: never
    - changes:
        - webalator/*
      when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud auth configure-docker gcr.io"
    - "curl -L https://releases.bazel.build/${BAZEL_VERSION}/release/bazel-${BAZEL_VERSION}-linux-x86_64 > bazel"
    - "chmod +x bazel"
    - "GOOGLE_APPLICATION_CREDENTIALS=${GCP_SA_KEY_FILE} IMAGE_REPO=bomsync-214520 IMAGE_TAG=${CI_COMMIT_SHA} ./bazel run //webalator:webalator_push"

Update Manifest:
  stage: update-manifest
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_UPDATE_IMAGES_IN_MANIFEST=/m"
      when: never
    - when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - |
      cat <<EOF >manifests/production/production-images.patch.yaml
      # This file is overwritten by CI
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: row-major-web-content-deployment
        namespace: row-major-web
      spec:
        template:
          spec:
            containers:
              - name: row-major-web-content
                image: gcr.io/bomsync-214520/webalator:${CI_COMMIT_SHA}
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: sharded-controller
        namespace: sharded-controller
      spec:
        template:
          spec:
            containers:
              - name: sharded-controller
                image: gcr.io/bomsync-214520/shardedcontroller:${CI_COMMIT_SHA}
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: rumor-mill
        namespace: rumor-mill
      spec:
        template:
          spec:
            containers:
            - name: main
              image: gcr.io/bomsync-214520/rumor-mill:${CI_COMMIT_SHA}
      EOF
    - |
      cat <<EOF >commit-message.txt
      Manifest update for ${CI_COMMIT_SHA}

      NO_TEST=
      NO_UPLOAD_IMAGES=
      NO_UPDATE_IMAGES_IN_MANIFEST=
      APPLY_MANIFEST=
      EOF
    - kubectl kustomize manifests/production > manifests/production/rendered.yaml
    - |
      curl \
        --fail \
        --request POST \
        --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
        --form "branch=master" \
        --form "commit_message=<commit-message.txt" \
        --form "actions[][action]=update" \
        --form "actions[][file_path]=manifests/production/production-images.patch.yaml" \
        --form "actions[][content]=<manifests/production/production-images.patch.yaml" \
        --form "actions[][action]=update" \
        --form "actions[][file_path]=manifests/production/rendered.yaml" \
        --form "actions[][content]=<manifests/production/rendered.yaml" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/commits"

Apply Manifest:
  stage: deploy
  environment:
    name: production
    url: https://row-major.net/
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /^NO_APPLY_MANIFEST=/m"
      when: never
    - changes:
        - manifests/*
      when: on_success
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  script:
    - "gcloud auth activate-service-account --key-file=${GCP_SA_KEY_FILE}"
    - "gcloud container clusters get-credentials --project=bomsync-214520 --zone=us-west1-a taahm-primary-cluster"
    - "kubectl apply -f manifests/production/rendered.yaml"
